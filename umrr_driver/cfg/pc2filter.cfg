#! /usr/bin/env python

PACKAGE='umrr_driver'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# 	Name Type Level Description Default	Min Max
gen.add("enable_filter_range", bool_t, 0, "Enable range filtering.", False)
gen.add("min_range", double_t, 0, "Minimum range [m].", 0, 0, 175)
gen.add("max_range", double_t, 0, "Minimum range [m].", 175, 0, 175)

gen.add("enable_azimuth_filter", bool_t, 0, "Enable azimuth filtering.", False)
gen.add("min_azimuth_angle", double_t, 0, "Minimum azimuth angle [째]", -90, -90, 90)
gen.add("max_azimuth_angle", double_t, 0, "Maximum azimuth angle [째]", 90, -90, 90)

gen.add("enable_elevation_filter", bool_t, 0, "Enable elevation filtering.", False)
gen.add("min_elevation_angle", double_t, 0, "Minimum elevation angle [째]", -90, -90, 90)
gen.add("max_elevation_angle", double_t, 0, "Maximum elevation angle [째]", 90, -90, 90)

gen.add("enable_radial_speed_filter", bool_t, 0, "Enable radial speed filtering.", False)
gen.add("min_radial_speed", double_t, 0, "Minimum radial speed [m/s].", -50, -50, 50)
gen.add("max_radial_speed", double_t, 0, "Maximum radial speed [m/s].", 50, -50, 50)

gen.add("enable_rcs_filter", bool_t, 0, "Enable radar cross section filtering.", False)
gen.add("min_rcs", double_t, 0, "Minimum radar cross section [db].", -5, -5, 50)
gen.add("max_rcs", double_t, 0, "Maximum radar cross section [db].", 50, -5, 50)

gen.add("enable_snr_filter", bool_t, 0,    "Enable signal to noise ratio filtering.", False)
gen.add("min_snr", double_t, 0, "Minimum signal to noise ratio [dB].", 0, 0, 130)
gen.add("max_snr", double_t, 0, "Maximum signal to noise ratio [dB].", 130, 0, 130)


exit(gen.generate(PACKAGE, "pc2_filter", "pc2filter"))
